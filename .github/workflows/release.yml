name: Release Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Create Export Options
      run: |
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>mac-application</string>
            <key>destination</key>
            <string>export</string>
        </dict>
        </plist>
        EOF
        
    - name: Build for Release
      run: |
        xcodebuild -project Macontainer.xcodeproj \
                   -scheme Macontainer \
                   -configuration Release \
                   -destination 'platform=macOS' \
                   -archivePath ./build/Macontainer.xcarchive \
                   archive
                   
    - name: Export Archive
      run: |
        xcodebuild -exportArchive \
                   -archivePath ./build/Macontainer.xcarchive \
                   -exportPath ./build/export \
                   -exportOptionsPlist ./ExportOptions.plist
        
    - name: Create DMG
      run: |
        mkdir -p ./build/dmg
        cp -R ./build/export/Macontainer.app ./build/dmg/
        hdiutil create -volname "Macontainer" -srcfolder ./build/dmg -ov -format UDZO ./build/Macontainer.dmg
        
    - name: Get version from Info.plist
      id: version
      run: |
        VERSION=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" ./build/export/Macontainer.app/Contents/Info.plist)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Macontainer v${{ steps.version.outputs.version }}
        body: |
          ## What's Changed
          - Auto-generated release from main branch
          
          ## Installation
          1. Download the DMG file below
          2. Open the DMG and drag Macontainer to your Applications folder
          3. Launch Macontainer from Applications
          
        files: |
          ./build/Macontainer.dmg
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macontainer-build
        path: |
          ./build/export/Macontainer.app
          ./build/Macontainer.dmg
        retention-days: 30
